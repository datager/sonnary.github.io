<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="2021/02/16/c%E8%AF%AD%E8%A8%80/unix%E7%BC%96%E7%A8%8B/"/>
      <url>2021/02/16/c%E8%AF%AD%E8%A8%80/unix%E7%BC%96%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/justinzwd/article/details/85206640">CLion工程中只能有一个main函数 &amp;&amp;怎么同时编写多个main函数的C文件</a></p><pre><code class="makefile">cmake_minimum_required(VERSION 3.13)project(address C)set (CMAKE_C_STANDARD 90)add_executable(main01 Chapter-01/1.4.3.c)</code></pre><p><a href="https://blog.csdn.net/u012814984/article/details/44751595">Unix环境编程中的apue.h和err_quit、err_sys问题</a></p><h2 id="1-4-文件和目录"><a href="#1-4-文件和目录" class="headerlink" title="1.4 文件和目录"></a>1.4 文件和目录</h2><ul><li>ls<pre><code class="c">#include &quot;../apue.3e/include/apue.h&quot;# include&quot;error.c&quot;</code></pre></li></ul><p>#define BUFFSIZE 4096</p><p>int main(int argc, char *argv[]) {<br>    int n;<br>    char buf[BUFFSIZE];</p><pre><code>while ((n = read(STDIN_FILENO, buf, BUFFSIZE)) &gt; 0)    if (write(STDOUT_FILENO, buf, n) != n)        err_sys(&quot;write error&quot;);if (n &lt; 0)    err_sys(&quot;read error&quot;);exit(0);</code></pre><p>}</p><pre><code>## 1.5输入和输出### 有缓冲IO- 读输入输出```c#include &quot;../apue.3e/include/apue.h&quot;# include&quot;error.c&quot;#define BUFFSIZE 4096int main(int argc, char *argv[]) &#123;    int n;    char buf[BUFFSIZE];    while ((n = read(STDIN_FILENO, buf, BUFFSIZE)) &gt; 0)        if (write(STDOUT_FILENO, buf, n) != n)            err_sys(&quot;write error&quot;);    if (n &lt; 0)        err_sys(&quot;read error&quot;);    exit(0);&#125;</code></pre><ul><li><p>重定向: 控制台输入 -&gt; 控制台输出</p><pre><code class="bash">~/go/src/github.com/sonnary/apue/Chapter-01   master ●  gcc -o a 1.5.3.c~/go/src/github.com/sonnary/apue/Chapter-01   master ●  ./a1122^C</code></pre></li><li><p>重定向: 控制台输入 -&gt; 文件输出</p><pre><code class="bash">✘  ~/go/src/github.com/sonnary/apue/Chapter-01   master ●  ./a &gt; data123456^C✘  ~/go/src/github.com/sonnary/apue/Chapter-01   master ●  cat data123456</code></pre></li><li><p>重定向: 文件输入 -&gt; 文件输出</p><pre><code class="bash">~/go/src/github.com/sonnary/apue/Chapter-01   master ●  cat &gt; infileindata^C✘  ~/go/src/github.com/sonnary/apue/Chapter-01   master ●  cat infileindata~/go/src/github.com/sonnary/apue/Chapter-01   master ●  ./a &lt; infile &gt; outfile~/go/src/github.com/sonnary/apue/Chapter-01   master ●  cat outfileindata</code></pre><h3 id="无缓冲IO"><a href="#无缓冲IO" class="headerlink" title="无缓冲IO"></a>无缓冲IO</h3><pre><code class="c">#include &quot;../apue.3e/include/apue.h&quot;# include &quot;error.c&quot;</code></pre></li></ul><p>int main(int argc, char *argv[]) {<br>    int c;<br>    while ((c = getc(stdin)) != EOF)<br>        if (putc(c, stdout) == EOF)<br>            err_sys(“output error”);</p><pre><code>if (ferror(stdin))    err_sys(&quot;input error&quot;);exit(0);</code></pre><p>}</p><pre><code>## 1.6程序和进程- 进程ID```c#include &quot;../apue.3e/include/apue.h&quot;int main(int argc, char *argv[]) &#123;    printf(&quot;hello world from process ID %ld\n&quot;, (long)getpid());    exit(0);&#125;</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>文章标题</title>
      <link href="2021/02/16/blog%E6%90%AD%E5%BB%BA/"/>
      <url>2021/02/16/blog%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p><a href="https://godweiyang.com/2018/04/13/hexo-blog/">https://godweiyang.com/2018/04/13/hexo-blog/</a><br><a href="https://segmentfault.com/a/1190000017986794">https://segmentfault.com/a/1190000017986794</a></p><ul><li>按这个配置next主题: <a href="http://theme-next.iissnan.com/getting-started.html">http://theme-next.iissnan.com/getting-started.html</a></li><li>从这里下载next主题: <a href="https://stackoverflow.com/questions/63405693/hexo-cannot-display-next-theme">https://stackoverflow.com/questions/63405693/hexo-cannot-display-next-theme</a><pre><code class="c">int main() &#123;int a = 1;int b = 2;int c = a + b;&#125;</code></pre></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2021/02/16/hello-world/"/>
      <url>2021/02/16/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
